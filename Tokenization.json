{
 "cells": [
  {
   "cell_type": "markdown",
   "source": [
    "# Proceso de Tokenizacion"
   ],
   "metadata": {
    "id": "sD8UYSh0dV3J"
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Descripción General\n",
    "Este notebook explora el uso del tokenizador y el modelo preentrenado BERT (bert-base-uncased) para realizar tareas de tokenización, comparación de similitud semántica entre palabras y visualización de relaciones mediante mapas de calor.\n",
    "\n",
    "## Librerías Utilizadas\n",
    "- transformers: Para cargar el tokenizador y el modelo BERT.\n",
    "\n",
    "- torch: Para operaciones con tensores.\n",
    "\n",
    "- seaborn y matplotlib: Para visualización de datos.\n",
    "\n",
    "- pandas y numpy: Para manipulación de datos y estructuras."
   ],
   "metadata": {
    "id": "fBhhZfVLeEll"
   }
  },
  {
   "cell_type": "code",
   "source": [
    "!pip install transformers torch seaborn matplotlib pandas numpy"
   ],
   "metadata": {
    "id": "XdTGzTFggAtI",
    "jupyter": {
     "is_executing": true
    }
   },
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 1. Importación de Librerías"
   ],
   "metadata": {
    "id": "3tPr1vBddamF"
   }
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "5qBm29cXj2ae",
    "source_hash": "ce471c1a",
    "execution_start": 1757118629972,
    "execution_millis": 5371,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 0,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "2950ab71b4a34cd48b5d32ccdd87ce39",
    "deepnote_cell_type": "code"
   },
   "source": [
    "from transformers import BertTokenizer\n",
    "import torch\n",
    "from transformers import BertModel\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 2. Carga del Tokenizador y Modelo BERT\n",
    "- Se carga el tokenizador bert-base-uncased.\n",
    "\n",
    "- Se tokeniza la frase: \"Hola cómo estás?\"."
   ],
   "metadata": {
    "id": "H2hmXFjxeS_l"
   }
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "qBN7cKhQj9qE",
    "colab": {
     "height": 284,
     "base_uri": "https://localhost:8080/",
     "referenced_widgets": [
      "c66df130d3454a518a2f042c065157c6",
      "2fa5ba0b2a1b40d2b3e7b637c2b7fe1d",
      "0cd852a206894eb3b8d7999af0e51d06",
      "580689f76fe14493be9059b2bb6c9f76",
      "654518f9f8e04f6ba6b501e7f4eaba64",
      "a54a745753d84a62b8f3dda93a0fdae8",
      "c2dc624dd4dd4fafad75677f25b306f7",
      "e4d5ca5550574cbea1b60728853093da",
      "9c1175f0a05c45b69a04269fd672b43e",
      "8b09815068d24576b38ecf3802033110",
      "9e762a147fef47938b8cab0a21f61a7b",
      "643efe100bb74b93a5a37d52d190c84c",
      "e73c387bb83a4daabd4b669a4b31f835",
      "034677c152ad4e9f922593f14b9290bd",
      "b9ba28c991414bc9b6afaeca45d5d6bd",
      "9ccac7a6633944f786da8f9483be4662",
      "2f910901dba446f6a3d9c5ad78574fab",
      "e6167d986c044147b1d9447072c33562",
      "ebcc5c3b73d54ec39b15fe59896204c3",
      "c3cfa91ac36f4467ab18b74682798f32",
      "aec165935d45403881196700389f8837",
      "f424f0df44f94829878aad0acfd2588b",
      "0214338136d34946a69e03136af7eef4",
      "303ffac1dd1145fdb0a52727abf8b185",
      "d42ab5a21e2f4605b7337fa34c7617fe",
      "a68a7cee0c4140fe9998b6d512ffb10b",
      "baa34e03fbc24a3eae319553ff217095",
      "72da54f95c3a491c975d8be79fa74642",
      "e022f446d96948f6bf0a188b8c3fb833",
      "da929255f67d41daa0e39d4c339cd172",
      "d0224bfa85c642bea7ed54c5b5882b36",
      "b1e36d765fb149ca8ba0f5726511cc7f",
      "4825c527da174302ad2a6f259c077af6",
      "af3754c17049427b8da56c3726cd3e49",
      "b547f422d36b467991a56e9357fcef75",
      "c2e752cff4134132b2bca823fe3204df",
      "6ed0b31472e8411b8613d2b7facb07dd",
      "c8127e34c4084420a670bd8aff76ce44",
      "a5a38cb213d74937b5f0e502e256dc35",
      "28b915fe57c743bfa2a5bc62884c6775",
      "58fe399359df43239eb58a8c5924cccc",
      "b5036bc4bfff464997b95d665c9e288f",
      "6c6ae00255494976a1c0b741c133a212",
      "93acbe1d16cc4093a546ea11a6a10ce5"
     ]
    },
    "outputId": "78426e90-0cd6-40d4-c606-f3e46259df1a",
    "source_hash": "a3b68a55",
    "execution_start": 1757118635402,
    "execution_millis": 105,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 1,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "8c14e05fc0a74da4b188373c4b0a7d9a",
    "deepnote_cell_type": "code"
   },
   "source": [
    "tokenizer = BertTokenizer.from_pretrained(\"bert-base-uncased\")\n",
    "tokens = tokenizer.tokenize(\"Hola cómo estás?\")"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "qR2vPXnKkOoa",
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "outputId": "9d3619fd-f3c5-4266-8511-bcf214737f16",
    "source_hash": "3a1717d6",
    "execution_start": 1757118635552,
    "execution_millis": 0,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 2,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "55139391795a40e0a08ceb7853a503f7",
    "deepnote_cell_type": "code"
   },
   "source": [
    "tokens"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "_CFAReKukCxk",
    "colab": {
     "height": 49,
     "base_uri": "https://localhost:8080/",
     "referenced_widgets": [
      "1592e1cd14ea4090a8408bf435f9aa64",
      "7af67cd6cb9a4f36afff8e9d1ddf21ab",
      "a1150fc23bc849fcb4c2a03ebe7849e4",
      "d4cc64cf54804630a6c16e3fc7d88c5a",
      "1446c4f53c9246dfb0236b8c86b8b1e3",
      "6047b5955d254f1b81f02ccfe28e7190",
      "9e49f478f4fe4349aa08f57f721fa598",
      "87c82ab2a4154a4087e3d3e43e9ee9e0",
      "b17364ed76424fce98dbc8196625dc85",
      "cb1d9ac4b67c464fbf4572ab09c759c3",
      "37f766a8b355456897a1aaa36c96b591"
     ]
    },
    "outputId": "35733ce5-ce25-4389-e912-346e895a20d0",
    "source_hash": "4242a5cb",
    "execution_start": 1757118635602,
    "execution_millis": 88,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 3,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "37e06820d900443ca4c8e67b13cf0aca",
    "deepnote_cell_type": "code"
   },
   "source": [
    "model = BertModel.from_pretrained(\"bert-base-uncased\")"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 3. Definición de la Clase Token\n",
    "La clase Token permite:\n",
    "\n",
    "- Convertir una palabra en un token y obtener su embedding.\n",
    "\n",
    "- Calcular la similitud coseno entre dos tokens.\n",
    "\n",
    "- Mostrar similitudes en porcentaje o valor numérico."
   ],
   "metadata": {
    "id": "hex-Xw3leZlV"
   }
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "YcBo-xzvBzHE",
    "source_hash": "3d8ae231",
    "execution_start": 1757118635742,
    "execution_millis": 0,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 4,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "f65a664b8903476e8cd6410235e70733",
    "deepnote_cell_type": "code"
   },
   "source": [
    "class Token:\n",
    "  def __init__(self, label: str):\n",
    "    self.label: str = label\n",
    "    self.id: int = tokenizer.convert_tokens_to_ids([self.label])[0]\n",
    "    self.embedding = model.embeddings.word_embeddings(torch.tensor([self.id]))\n",
    "\n",
    "  def get_similarity_per(self, tensor: torch.Tensor, toLabel: str) -> str:\n",
    "    value = tensor.item()\n",
    "    return f\"The {self.label} and {toLabel} have a {round(value * 100, 2)}% similarity\";\n",
    "\n",
    "\n",
    "  def compare(self, to: \"Token\") -> str:\n",
    "    similarity_tensor = torch.nn.functional.cosine_similarity(self.embedding, to.embedding, dim=1)\n",
    "    return self.get_similarity_per(similarity_tensor[0], to.label)\n",
    "\n",
    "  def compare_get(self, to: \"Token\") -> str:\n",
    "    similarity_tensor = torch.nn.functional.cosine_similarity(self.embedding, to.embedding, dim=1)\n",
    "    return round(similarity_tensor[0].item(), 2)"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 4. Creación de Tokens de Ejemplo\n",
    "Se crean instancias de la clase `Token` para palabras como:\n",
    "\n",
    "- `king`, `man`, `woman`, `queen`, `teacher`, `soldier`\n",
    "\n",
    "- `cat`, `lion`, `tiger`, `dog`, `gray_wolf`, `coyote`"
   ],
   "metadata": {
    "id": "6Brr2wmPejot"
   }
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "h0HHk0QjkOEw",
    "source_hash": "29f8cb22",
    "execution_start": 1757118635792,
    "execution_millis": 0,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 5,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "3fea237026934d3dae420a5f61464a49",
    "deepnote_cell_type": "code"
   },
   "source": [
    "king = Token(\"king\")\n",
    "man = Token(\"man\")\n",
    "woman = Token(\"woman\")\n",
    "queen = Token(\"queen\")\n",
    "teacher = Token(\"teacher\")\n",
    "soldier = Token(\"soldier\")\n",
    "\n",
    "cat = Token(\"cat\")\n",
    "lion = Token(\"lion\")\n",
    "tiger = Token(\"tiger\")\n",
    "dog = Token(\"dog\")\n",
    "gray_wolf = Token(\"Gray wolf\")\n",
    "coyote = Token(\"coyote\")"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "LFQQoxsKqUgQ",
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "outputId": "d516e39a-11ce-4469-f972-be32d228eed2",
    "collapsed": true,
    "source_hash": "6bcc3e93",
    "execution_start": 1757118635842,
    "execution_millis": 0,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 6,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "990233c3908342359ee776d89ec99893",
    "deepnote_cell_type": "code"
   },
   "source": [
    "king.embedding"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 5. Comparación de Similitudes\n",
    "- Se comparan pares de palabras usando similitud coseno.\n",
    "\n",
    "- Se prueba la analogía clásica: `king - man + woman ≈ queen`"
   ],
   "metadata": {
    "id": "p1URpcVve1Fl"
   }
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "zAWAHCkolazj",
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "outputId": "a1939fe4-5d61-43b6-b2fc-d2c2418babd4",
    "source_hash": "e391787b",
    "execution_start": 1757118635892,
    "execution_millis": 0,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 7,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "09e660653c5346c8a8ff35d63f9917b4",
    "deepnote_cell_type": "code"
   },
   "source": [
    "print(queen.compare(man))\n",
    "print(king.compare(queen))\n",
    "similarity = torch.nn.functional.cosine_similarity(king.embedding-man.embedding+woman.embedding, queen.embedding)\n",
    "print(similarity[0])"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "KWvexIdcJw-t",
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "outputId": "0864c652-3999-41e9-970f-b625ebdbc925",
    "source_hash": "eede9ffa",
    "execution_start": 1757118636012,
    "execution_millis": 0,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 9,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "53cecff497cc4420b1ff48ebf88512a0",
    "deepnote_cell_type": "code"
   },
   "source": [
    "canidae_list = [dog, gray_wolf, coyote]\n",
    "felidae_list = [cat, lion, tiger]\n",
    "for i in range(len(canidae_list)):\n",
    "  for j in range(len(felidae_list)):\n",
    "    print(canidae_list[i].compare(felidae_list[j]), end=\"\\n\\n\")\n",
    "\n",
    "print(cat.compare(tiger))\n",
    "print(cat.compare(lion))"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "source": [
    "## 6. Visualización con Heatmaps\n",
    "- Se generan dos mapas de calor:"
   ],
   "metadata": {
    "id": "UoL3sQXHfKMe"
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "### 1. Animales vs Humanos: Muestra similitudes entre tokens de animales y humanos."
   ],
   "metadata": {
    "id": "dFBMtMwcfeUe"
   }
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "6rptkvADOsm9",
    "colab": {
     "height": 700,
     "base_uri": "https://localhost:8080/"
    },
    "outputId": "c4bd6ec1-5399-4102-fe5f-40e5af211c37",
    "source_hash": "21944e5",
    "execution_start": 1757118636122,
    "execution_millis": 144,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 11,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "ee6f8409d4a84f67b25db801b9122078",
    "deepnote_cell_type": "code"
   },
   "source": [
    "animal_tokens  = [cat, lion, tiger, dog, gray_wolf, coyote]\n",
    "human_tokens = [queen, king, man, woman, teacher, soldier]\n",
    "\n",
    "data = []\n",
    "for a in animal_tokens:\n",
    "    row = []\n",
    "    for h in human_tokens:\n",
    "        sim = a.compare_get(h)\n",
    "        row.append(sim)\n",
    "    data.append(row)\n",
    "df = pd.DataFrame(data,\n",
    "                  columns=[animal.label for animal in animal_tokens],\n",
    "                  index=[human.label for human in human_tokens])\n",
    "\n",
    "plt.figure(figsize=(8,8))\n",
    "sns.heatmap(df,\n",
    "            annot=True,        # Mostrar valores\n",
    "            fmt=\".2f\",         # Formato de los números\n",
    "            cmap=\"Spectral\",     # Paleta de colores\n",
    "            linewidths=0.5,\n",
    "            robust=True)    # Líneas divisorias\n",
    "\n",
    "# 4️⃣ Mostrar\n",
    "plt.title(\"heatmap animals vs humans\", fontsize=14)\n",
    "plt.show()\n"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "source": [
    "### 2. Humanos vs Humanos: Muestra similitudes entre tokens de humanos."
   ],
   "metadata": {
    "id": "koqFgMcIfqqv"
   }
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "dl2heJRZUhA0",
    "colab": {
     "height": 700,
     "base_uri": "https://localhost:8080/"
    },
    "outputId": "598c96cb-a9e8-49e9-b63b-d47a71c4a70f",
    "source_hash": "36e4ce8e",
    "execution_start": 1757118636312,
    "execution_millis": 87,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 12,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "a82294eaaadb4d94b6cfa5eb8d06293c",
    "deepnote_cell_type": "code"
   },
   "source": [
    "data = []\n",
    "for a in human_tokens:\n",
    "    row = []\n",
    "    for h in human_tokens:\n",
    "        sim = a.compare_get(h)\n",
    "        row.append(sim)\n",
    "    data.append(row)\n",
    "df = pd.DataFrame(data,\n",
    "                  columns=[human.label for human in human_tokens],\n",
    "                  index=[human.label for human in human_tokens])\n",
    "\n",
    "plt.figure(figsize=(8,8))\n",
    "sns.heatmap(df,\n",
    "            annot=True,        # Mostrar valores\n",
    "            fmt=\".2f\",         # Formato de los números\n",
    "            cmap=\"Spectral\",     # Paleta de colores\n",
    "            linewidths=0.5,\n",
    "            robust=True)    # Líneas divisorias\n",
    "\n",
    "# 4️⃣ Mostrar\n",
    "plt.title(\"heatmap animals vs humans\", fontsize=14)\n",
    "plt.show()\n"
   ],
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "source": [
    "### 2. Animales vs Animales: Muestra similitudes entre tokens de animales."
   ],
   "metadata": {
    "id": "6_m5LI3afzC1"
   }
  },
  {
   "cell_type": "code",
   "metadata": {
    "id": "9vxLiNwbUibV",
    "colab": {
     "height": 700,
     "base_uri": "https://localhost:8080/"
    },
    "outputId": "add589a6-e784-4117-ba27-fe1bd4846596",
    "source_hash": "9bfd0ce0",
    "execution_start": 1757118636462,
    "execution_millis": 268,
    "execution_context_id": "391ed18b-eb62-4591-a1f9-074d13af95e2",
    "deepnote_app_block_order": 13,
    "deepnote_app_block_visible": true,
    "deepnote_app_block_group_id": null,
    "deepnote_app_is_code_hidden": false,
    "deepnote_app_is_output_hidden": false,
    "cell_id": "62beb17d7791429bb9104f79b94f6e58",
    "deepnote_cell_type": "code"
   },
   "source": [
    "data = []\n",
    "for a in animal_tokens:\n",
    "    row = []\n",
    "    for h in animal_tokens:\n",
    "        sim = a.compare_get(h)\n",
    "        row.append(sim)\n",
    "    data.append(row)\n",
    "df = pd.DataFrame(data,\n",
    "                  columns=[animal.label for animal in animal_tokens],\n",
    "                  index=[animal.label for animal in animal_tokens])\n",
    "\n",
    "plt.figure(figsize=(8,8))\n",
    "sns.heatmap(df,\n",
    "            annot=True,        # Mostrar valores\n",
    "            fmt=\".2f\",         # Formato de los números\n",
    "            cmap=\"Spectral\",     # Paleta de colores\n",
    "            linewidths=0.5,\n",
    "            robust=True)    # Líneas divisorias\n",
    "\n",
    "# 4️⃣ Mostrar\n",
    "plt.title(\"heatmap animals vs humans\", fontsize=14)\n",
    "plt.show()\n"
   ],
   "outputs": [],
   "execution_count": null
  }
 ],
 "nbformat": 4,
 "nbformat_minor": 0,
 "metadata": {
  "deepnote_app_layout": "powerful-article",
  "deepnote_app_hide_all_code_blocks_enabled": false,
  "deepnote_app_reactivity_enabled": true,
  "deepnote_notebook_id": "4a2ff34c71c64129b018ed60cb5c182a",
  "colab": {
   "provenance": []
  },
  "language_info": {
   "name": "python"
  },
  "kernelspec": {
   "name": "python3",
   "display_name": "Python 3 (ipykernel)",
   "language": "python"
  }
 }
}
